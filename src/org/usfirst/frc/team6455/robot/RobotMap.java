package org.usfirst.frc.team6455.robot;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainFrontRight;
    public static SpeedController driveTrainFrontLeft;
    public static SpeedController driveTrainBackRight;
    public static SpeedController driveTrainBackLeft;
    public static RobotDrive driveTrainRobotDrive;
    public static SpeedController robeClimbClimb;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainFrontRight = new Spark(2);
        LiveWindow.addActuator("DriveTrain", "FrontRight", (Spark) driveTrainFrontRight);
        
        driveTrainFrontLeft = new Spark(3);
        LiveWindow.addActuator("DriveTrain", "FrontLeft", (Spark) driveTrainFrontLeft);
        
        driveTrainBackRight = new Spark(1);
        LiveWindow.addActuator("DriveTrain", "BackRight", (Spark) driveTrainBackRight);
        
        driveTrainBackLeft = new Spark(4);
        LiveWindow.addActuator("DriveTrain", "BackLeft", (Spark) driveTrainBackLeft);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainFrontLeft, driveTrainBackLeft,
              driveTrainFrontRight, driveTrainBackRight);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        robeClimbClimb = new TalonSRX(5);
        LiveWindow.addActuator("RobeClimb", "Climb", (TalonSRX) robeClimbClimb);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
